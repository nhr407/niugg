<?xml version="1.0" encoding="UTF-8"?>
<!-- DispatcherServlet application context for  web tier.-->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd">
		
	<!-- 使用Annotation自动注册Bean,只扫描@Controller -->
	<!-- use-default-filters="false". This will in effect disable automatic detection of classes annotated with @Component,
		@Repository, @Service, or @Controller. -->
	<context:component-scan base-package="net.ngg.example" use-default-filters="false">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
	
	<!-- 默认的注解映射的支持，org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping, RequestMappingHandlerAdapter, ExceptionHandlerExceptionResolver -->
	<mvc:annotation-driven>
		<mvc:message-converters register-defaults="true">
			<!-- 将StringHttpMessageConverter的默认编码设为UTF-8 -->
			<!-- 方法直接返回字符串时，中文字符乱码：方法定义直接返回字符串时(Html或Json内容)，调用的是StringHttpMessageConverter，而此Converter默认编码是ISO-85591，需要重新设为UTF-8 -->
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
				<constructor-arg value="UTF-8" />
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>
		
	<!-- default-servlet-handler  configures a handler for processing static resources by forwarding static resource requests 
	to the default Servlet of the Servlet container.-->
	<!-- <mvc:default-servlet-handler /> --> <!-- 将静态资源的处理经由Spring MVC交回Web应用服务器处理 -->
	<mvc:resources location = "/static/" mapping = "/static/**" />
		
	<!-- It resolves a logical view name into a View object that delegates rendering responsibility to a template(usually a JSP)
	located in the web application's context. -->
	<bean id="jspViewResolver" 
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp"/>
	</bean>
	
	
	
</beans>